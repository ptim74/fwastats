trigger:
- dotnet6

stages:
- stage: Build
  pool:
    vmImage: ubuntu-latest
  jobs:
  - job: 'Build_Job'
    steps:
    - task: UseDotNet@2
      displayName: 'Install .NET Core SDK'
      inputs:
        version: '6.0.x'
    - task: DotNetCoreCLI@2
      displayName: 'dotnet restore'
      inputs:
        command: 'restore'
    - task: DotNetCoreCLI@2
      displayName: 'dotnet build'
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '--configuration $(BuildConfiguration) -r $(BuildArchitecture) --self-contained true'
    - task: DotNetCoreCLI@2
      displayName: 'dotnet publish'
      inputs:
        command: publish
        publishWebProjects: True
        arguments: '--configuration $(BuildConfiguration) -r $(BuildArchitecture) --self-contained true --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: True
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)' 
        artifactName: 'FWAStatsWeb'

- stage: Deploy
  jobs:
  - deployment: 'Deploy_Job'
    environment:
      name: FwaStats
      resourceType: VirtualMachine
    workspace:
      clean: true
    strategy:
      runOnce:
        deploy:
          steps:
          - task: ExtractFiles@1
            displayName: 'Extract files'
            inputs:
              archiveFilePatterns: '$(Pipeline.Workspace)/FWAStatsWeb/*.zip'
              destinationFolder: '$(DestinationFolder)'
              cleanDestinationFolder: false
              overwriteExistingFiles: true
          - task: FileTransform@1
            displayName: 'File Transform:'
            inputs:
              folderPath: '$(DestinationFolder)'
              fileType: json
              targetFiles: '**/appsettings.Sample.json'
            
          - task: Bash@3
            displayName: 'Bash Script'
            inputs:
              targetType: 'inline'
              script: |
                echo Copying Configuration
                cp $(DestinationFolder)/appsettings.Sample.json $(DestinationFolder)/appsettings.Production.json
                
                echo Restarting Service
                sudo systemctl restart fwastats.service
                
                echo Checking Service Status
                sudo systemctl status fwastats.service
                
                echo Wait 5 Seconds
                ping -c 5 localhost > /dev/null
                
                echo Touching Update
                wget -O /dev/null http://localhost:5000/update
                
                echo Deployment Ended
            